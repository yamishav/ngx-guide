{"version":3,"file":"ng-guide-walk-lib.umd.js.map","sources":["ng://ng-guide-walk-lib/lib/ng-guide-walk-lib.service.ts","ng://ng-guide-walk-lib/lib/ng-guide-walk-lib.component.ts","ng://ng-guide-walk-lib/lib/utils/index.ts","ng://ng-guide-walk-lib/lib/guide-content/guide-content.component.ts","ng://ng-guide-walk-lib/lib/ng-guide-step.directive.ts","ng://ng-guide-walk-lib/lib/ng-guide-walk-lib.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { WalkEvent } from './ng-guide.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgGuideWalkLibService {\n  private activeSteps = 0;\n  private eventWalkSubject: Subject<WalkEvent> = new Subject();\n  private currentStep: number | null = null;\n  private _config = {};\n\n  get config() {\n    return this._config;\n  }\n  set config(config) {\n    this._config = config;\n  }\n\n  constructor() { }\n  register() {\n    this.activeSteps++;\n  }\n  unregister() {\n    this.activeSteps--;\n  }\n  isLast(step) {\n    return (this.activeSteps) === step;\n  }\n  stopGuide() {\n    this.closeCurrentStep();\n    this.currentStep = undefined;\n  }\n  public startGuide() {\n    this.currentStep = 1;\n    this.invokeStep(this.currentStep);\n  }\n  public invokeStep(stepNum: number) {\n    this.closeCurrentStep();\n    this.currentStep = stepNum;\n    this.eventWalkSubject.next({ step: stepNum, event: 'open' });\n  }\n  private closeCurrentStep() {\n    if (this.currentStep) {\n      this.eventWalkSubject.next({ step: this.currentStep, event: 'close' });\n    }\n  }\n\n  public nextGuide() {\n    this.closeCurrentStep();\n    this.currentStep++;\n    this.invokeStep(this.currentStep);\n  }\n  public getStepObservable(stepNum: number): Observable<WalkEvent> {\n    return this.eventWalkSubject.asObservable().pipe(filter(item => item.step === stepNum));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-guide-walk',\n  template: `\n    <p>\n      ng-guide-walk-lib works!\n    </p>\n    <ng-content></ng-content>\n  `,\n  styles: []\n})\nexport class NgGuideWalkLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * \n * @param num - the number to parse\n * Try's to parse any to number\n */\nexport function toNumber(num: number | any): number {\n    return Number.isInteger(num) ? num : Number.parseInt(num);\n}\n\nexport function unsignedOnDestroyed(component: OnDestroy) {\n  const oldNgOnDestroy = component.ngOnDestroy;\n  const onDestroySubject$ = new ReplaySubject<void>(1);\n  component.ngOnDestroy = () => {\n    oldNgOnDestroy.apply(component);\n    onDestroySubject$.next(undefined);\n    onDestroySubject$.complete();\n  };\n  return onDestroySubject$;\n}\n","import { Component, OnInit, Input, OnDestroy, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\nimport * as GuideUtils from '../utils';\nimport { NgGuideWalkLibService } from '../ng-guide-walk-lib.service';\nimport { TouchSequence } from 'selenium-webdriver';\nimport Popper from 'popper.js';\nexport type WalkLocation = Popper.Placement;\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'ng-guide-content',\n  templateUrl: './guide-content.component.html',\n  styleUrls: ['./guide-content.component.scss']\n})\nexport class GuideContentComponent implements OnInit, OnDestroy {\n  private currentAction: 'next' | 'stop' = 'next';\n  private _step = 1;\n  private popper: Popper;\n  show = true;\n  overlayObject = null;\n  @Input() shouldCreateOverlay = false;\n  @Input() modifiers: Popper.Modifiers;\n  @Input() positionFixed = false;\n  @Input() eventsEnabled = true;\n  @Input() target: string | Element;\n  @Input() location: WalkLocation = 'right';\n  @Input() displayArrow: boolean = true;\n  @Input() customCss: { [key: string]: string } = null;\n  @Input() set step(step: number) {\n    this._step = GuideUtils.toNumber(step);\n  }\n  get step() {\n    return this._step;\n  }\n\n\n  constructor(\n    private _element: ElementRef<HTMLElement>,\n    private _renderer: Renderer2,\n    private host: ElementRef<HTMLElement>,\n    private guideService: NgGuideWalkLibService) {\n\n  }\n\n  ngOnInit() {\n    // todo : move to an action trigger when needed\n\n    const { location, positionFixed, eventsEnabled, modifiers } = this;\n  \n    this.popper = new Popper(\n      this.getNode(),\n      this._element.nativeElement.querySelector('.ngx-guide'),\n      <any>{\n        placement: location,\n        positionFixed,\n        eventsEnabled,\n        modifiers\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.popper.destroy();\n    this.clean();\n  }\n  next() {\n    this.guideService.nextGuide();\n\n\n  }\n  isLast() {\n    return this.guideService.isLast(this.step);\n  }\n  done() {\n    this.guideService.stopGuide();\n  }\n  private getNode(): Element {\n    if (this.target) {\n      if (typeof this.target === 'string') {\n        return document.querySelector(this.target);\n      } else {\n        return this.target;\n      }\n    } else {\n      return this._element.nativeElement;\n    }\n  }\n  private clean() {\n    if (!this.overlayObject) { return; }\n    this.overlayObject.style.display = 'none';\n  }\n}\n","import {\n  Directive,\n  ViewContainerRef,\n  ElementRef,\n  Input,\n  TemplateRef,\n  Type,\n  ComponentRef,\n  ComponentFactoryResolver, Renderer2, Injector, OnDestroy, OnInit\n} from '@angular/core';\nimport { NgGuideWalkLibService } from './ng-guide-walk-lib.service';\nimport { toNumber, unsignedOnDestroyed } from './utils';\nimport { WalkEvent } from './ng-guide.types';\nimport { takeUntil } from 'rxjs/operators';\nimport { GuideContentComponent, WalkLocation } from './guide-content/guide-content.component';\n\n\n\n@Directive({\n  selector: '[ngGuideStep]',\n})\nexport class NgGuideStepDirective implements OnInit, OnDestroy {\n\n  position = 'below';\n\n  private _step: number = 1;\n\n  @Input('ngGuideStep') set step(stepNumber: number | string) {\n    this._step = toNumber(stepNumber);\n  }\n  get step() {\n    return this._step;\n  }\n  @Input('ngGuideStepContent') ngGuideStepContent: string | TemplateRef<any> | Type<any>;\n\n  @Input('ngGuideStepLocation') ngGuideStepLocation: WalkLocation = 'bottom';\n  @Input('ngGuideStepStyle') ngGuideStepStyle: { [key: string]: string } | null = null;\n  @Input('ngGuideStepDisplayArrow') ngGuideStepDisplayArrow: boolean = true;\n  @Input('ngGuideStepFocusElement') ngGuideStepFocusElement: boolean = true;\n  private componentRef: ComponentRef<GuideContentComponent>;\n  constructor(\n    private elementRef: ElementRef,\n    private viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2,\n    private injector: Injector,\n    private resolver: ComponentFactoryResolver,\n    private walkLibService: NgGuideWalkLibService) { }\n\n  ngOnInit(): void {\n    this.subscribeToGuideRequest();\n    this.walkLibService.register();\n  }\n  ngOnDestroy(): void {\n    this.closeComponent();\n    this.walkLibService.unregister();\n  }\n  private closeComponent() {\n    if (!this.componentRef) { return; }\n    this.componentRef.destroy();\n    this.componentRef = null;\n  }\n  private createComponent() {\n    const factory = this.resolver.resolveComponentFactory(GuideContentComponent);\n    const content = this.generateNgContent();\n    this.componentRef = this.viewContainerRef.createComponent(factory, 0, null, content);\n    this.setInputs();\n    \n    this.handleFocus();\n    this.handleOverlay();\n  }\n\n  generateNgContent() {\n    // Content is string\n    if (typeof this.ngGuideStepContent === 'string') {\n      const element = this.renderer.createText(this.ngGuideStepContent);\n      return [[element]];\n    }\n    // Content is Template\n    if (this.ngGuideStepContent instanceof TemplateRef) {\n      const viewRefTemplate = this.ngGuideStepContent.createEmbeddedView({});\n      return [viewRefTemplate.rootNodes];\n    }\n\n    // Else it's a component\n    const factory = this.resolver.resolveComponentFactory(this.ngGuideStepContent);\n    const viewRef = factory.create(this.injector);\n    return [[viewRef.location.nativeElement]];\n  }\n  private setInputs() {\n    const instanceRef = this.componentRef.instance;\n    instanceRef.step = this.step as number;\n    instanceRef.target = this.elementRef.nativeElement;\n    instanceRef.location = this.ngGuideStepLocation || 'bottom';\n    instanceRef.displayArrow = this.ngGuideStepDisplayArrow;\n    if (this.ngGuideStepStyle) {\n      instanceRef.customCss = this.ngGuideStepStyle;\n    }\n  }\n  private subscribeToGuideRequest() {\n    this.walkLibService.getStepObservable(<number>this.step)\n      .pipe(takeUntil(unsignedOnDestroyed(this)))\n      .subscribe((walkEvent: WalkEvent) => walkEvent.event === 'open' ? this.createComponent() : this.closeComponent());\n  }\n\n  private handleOverlay() {\n    this.renderer.addClass(this.elementRef.nativeElement, 'overlay');\n    // this.elementRef.nativeElement.classList.add('overlay');\n    this.componentRef.onDestroy(() => {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'overlay');\n    });\n  }\n  private handleFocus() {\n    if (this.ngGuideStepFocusElement) {\n      this.elementRef.nativeElement.focus();\n    }\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { NgGuideWalkLibComponent } from './ng-guide-walk-lib.component';\nimport { NgGuideStepDirective } from './ng-guide-step.directive';\nimport { GuideContentComponent } from './guide-content/guide-content.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  entryComponents: [GuideContentComponent],\n  declarations: [NgGuideWalkLibComponent,\n    NgGuideStepDirective,\n    GuideContentComponent],\n  exports: [\n    NgGuideWalkLibComponent,\n    NgGuideStepDirective,\n    GuideContentComponent]\n})\nexport class NgGuideWalkLibModule { }\n"],"names":["Subject","filter","Injectable","Component","ReplaySubject","GuideUtils.toNumber","ViewEncapsulation","ElementRef","Renderer2","Input","TemplateRef","takeUntil","Directive","ViewContainerRef","Injector","ComponentFactoryResolver","NgModule","CommonModule"],"mappings":"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"}
