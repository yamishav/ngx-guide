{"version":3,"sources":["ng://ng-guide-walk/lib/ng-guide-walk-lib.service.ts","ng://ng-guide-walk/lib/ng-guide-walk-lib.component.ts","ng://ng-guide-walk/lib/utils/index.ts","ng://ng-guide-walk/lib/guide-content/guide-content.component.ts","ng://ng-guide-walk/lib/ng-guide-step.directive.ts","ng://ng-guide-walk/lib/ng-guide-walk-lib.module.ts"],"names":["NgGuideWalkLibService","this","activeSteps","eventWalkSubject","Subject","currentStep","_config","Object","defineProperty","prototype","config","register","step","push","unregister","filter","stepNumber","isLast","stopGuide","closeCurrentStep","undefined","startGuide","sort","invokeStep","stepNum","next","event","nextGuide","getStepObservable","asObservable","pipe","item","Injectable","args","providedIn","NgGuideWalkLibComponent","ngOnInit","Component","selector","template","toNumber","num","Number","isInteger","parseInt","toBoolean","value","String","GuideContentComponent","_element","_renderer","host","guideService","currentAction","_step","show","overlayObject","shouldCreateOverlay","positionFixed","eventsEnabled","location","displayArrow","customCss","GuideUtils.toNumber","_a","modifiers","popper","Popper","getNode","nativeElement","querySelector","placement","ngOnDestroy","destroy","clean","done","target","document","style","display","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","Input","NgGuideStepDirective","elementRef","viewContainerRef","renderer","injector","resolver","walkLibService","overlay","position","rootElement","ngGuideStepLocation","ngGuideStepStyle","ngGuideStepDisplayArrow","ngGuideStepOverlay","ngGuideStepFocusElement","ngGuideStepStepStatus","EventEmitter","subscribeToGuideRequest","closeComponent","componentRef","emit","generateComponent","factory","resolveComponentFactory","content","generateNgContent","createComponent","setInputs","handleFocus","handleOverlay","ngGuideStepContent","createText","TemplateRef","createEmbeddedView","rootNodes","create","instanceRef","instance","_this","takeUntil","unsignedOnDestroyed","component","oldNgOnDestroy","onDestroySubject$","ReplaySubject","apply","complete","subscribe","walkEvent","getOffset","element","body","docEl","documentElement","scrollTop","window","pageYOffset","scrollLeft","pageXOffset","x","getBoundingClientRect","top","width","height","left","createElement","addClass","appendChild","getRootElement","onDestroy","removeChild","removeClass","focus","getRootOfAllElement","last","parentNode","res","localName","Directive","Inject","DOCUMENT","ViewContainerRef","Injector","ComponentFactoryResolver","Output","NgGuideWalkLibModule","forRoot","ngModule","providers","provide","useClass","NgModule","imports","CommonModule","entryComponents","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { WalkEvent } from './ng-guide.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgGuideWalkLibService {\n  private activeSteps = [];\n  private eventWalkSubject: Subject<WalkEvent> = new Subject();\n  private currentStep: number | null = null;\n  private _config = {};\n\n  get config() {\n    return this._config;\n  }\n  set config(config) {\n    this._config = config;\n  }\n\n  constructor() { }\n  register(step: number) {\n    this.activeSteps.push(step);\n  }\n  unregister(step: number) {\n    this.activeSteps =  this.activeSteps.filter(stepNumber => stepNumber !== step);\n  }\n  isLast(step) {\n\n    return this.currentStep ? (this.activeSteps.length) === step : true;\n  }\n  stopGuide() {\n    this.closeCurrentStep();\n    this.currentStep = undefined;\n  }\n  public startGuide() {\n    this.activeSteps.sort();\n    if (this.currentStep) { return; }\n    this.currentStep = 1;\n    this.invokeStep(this.currentStep);\n  }\n  public invokeStep(stepNum: number) {\n    this.closeCurrentStep();\n    this.currentStep = this.activeSteps[stepNum - 1];\n    this.eventWalkSubject.next({ step: stepNum, event: 'open' });\n  }\n  private closeCurrentStep() {\n    if (this.currentStep) {\n      this.eventWalkSubject.next({ step: this.currentStep, event: 'close' });\n    }\n  }\n\n  public nextGuide() {\n    this.closeCurrentStep();\n    if (this.isLast(this.currentStep)) {\n      this.currentStep = undefined;\n      return; // and we are done for this tour\n    }\n    this.currentStep++;\n    this.invokeStep(this.currentStep);\n    \n    \n  }\n  public getStepObservable(stepNum: number): Observable<WalkEvent> {\n    return this.eventWalkSubject\n      .asObservable()\n      .pipe(filter(item => item.step === stepNum));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-guide-walk',\n  template: `\n    <p>\n      ng-guide-walk-lib works!\n    </p>\n    <ng-content></ng-content>\n  `,\n  styles: []\n})\nexport class NgGuideWalkLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * \n * @param num - the number to parse\n * Try's to parse any to number\n */\nexport function toNumber(num: number | any): number {\n    return Number.isInteger(num) ? num : Number.parseInt(num);\n}\n\nexport function unsignedOnDestroyed(component: OnDestroy) {\n  const oldNgOnDestroy = component.ngOnDestroy;\n  const onDestroySubject$ = new ReplaySubject<void>(1);\n  component.ngOnDestroy = () => {\n    oldNgOnDestroy.apply(component);\n    onDestroySubject$.next(undefined);\n    onDestroySubject$.complete();\n  };\n  return onDestroySubject$;\n}\n\nexport function toBoolean(value: boolean | string) {\n  return String(value) == 'true';\n}\n","import { Component, OnInit, Input, OnDestroy, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\nimport * as GuideUtils from '../utils';\nimport { NgGuideWalkLibService } from '../ng-guide-walk-lib.service';\nimport { TouchSequence } from 'selenium-webdriver';\nimport 'popper.js';\nimport Popper from 'popper.js';\nexport type WalkLocation = Popper.Placement;\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'ng-guide-content',\n  templateUrl: './guide-content.component.html',\n  styleUrls: ['./guide-content.component.scss']\n})\nexport class GuideContentComponent implements OnInit, OnDestroy {\n  private currentAction: 'next' | 'stop' = 'next';\n  private _step = 1;\n  private popper: Popper;\n  show = true;\n  overlayObject = null;\n  @Input() shouldCreateOverlay = false;\n  @Input() modifiers: Popper.Modifiers;\n  @Input() positionFixed = false;\n  @Input() eventsEnabled = true;\n  @Input() target: string | Element;\n  @Input() location: WalkLocation = 'right';\n  @Input() displayArrow: boolean = true;\n  @Input() customCss: { [key: string]: string } = null;\n  @Input() set step(step: number) {\n    this._step = GuideUtils.toNumber(step);\n  }\n  get step() {\n    return this._step;\n  }\n\n\n  constructor(\n    private _element: ElementRef<HTMLElement>,\n    private _renderer: Renderer2,\n    private host: ElementRef<HTMLElement>,\n    private guideService: NgGuideWalkLibService) {\n\n  }\n\n  ngOnInit() {\n    // todo : move to an action trigger when needed\n\n    const { location, positionFixed, eventsEnabled, modifiers } = this;\n  \n    this.popper = new Popper(\n      this.getNode(),\n      this._element.nativeElement.querySelector('.ngx-guide'),\n      <any>{\n        placement: location,\n        positionFixed,\n        eventsEnabled,\n        modifiers\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.popper.destroy();\n    this.clean();\n  }\n  next() {\n    this.guideService.nextGuide();\n\n\n  }\n  isLast() {\n    return this.guideService.isLast(this.step);\n  }\n  done() {\n    this.guideService.stopGuide();\n  }\n  private getNode(): Element {\n    if (this.target) {\n      if (typeof this.target === 'string') {\n        return document.querySelector(this.target);\n      } else {\n        return this.target;\n      }\n    } else {\n      return this._element.nativeElement;\n    }\n  }\n  private clean() {\n    if (!this.overlayObject) { return; }\n    this.overlayObject.style.display = 'none';\n  }\n}\n","import {\n  Directive,\n  ViewContainerRef,\n  ElementRef,\n  Input,\n  TemplateRef,\n  Type,\n  EventEmitter,\n  ComponentRef,\n  ComponentFactoryResolver, Renderer2, Injector, OnDestroy, OnInit, Output, Inject\n} from '@angular/core';\nimport { NgGuideWalkLibService } from './ng-guide-walk-lib.service';\nimport { toNumber, unsignedOnDestroyed, toBoolean } from './utils';\nimport { WalkEvent } from './ng-guide.types';\nimport { takeUntil } from 'rxjs/operators';\nimport { GuideContentComponent, WalkLocation } from './guide-content/guide-content.component';\nimport { DOCUMENT } from '@angular/common';\nexport type StepStatus = 'BeforeOpen' | 'Open' | 'BeforeClose' | 'AfterClose';\n\n@Directive({\n  selector: '[ngGuideStep]',\n})\nexport class NgGuideStepDirective implements OnInit, OnDestroy {\n  private overlay = null;\n  position = 'below';\n  private _step: number = 1;\n\n  @Input() rootElement = 'body';\n\n  @Input('ngGuideStep') set step(stepNumber: number | string) {\n    this._step = toNumber(stepNumber);\n  }\n  get step(): number | string {\n    return this._step;\n  }\n  @Input('ngGuideStepContent') ngGuideStepContent: string | TemplateRef<any> | Type<any>;\n  @Input('ngGuideStepLocation') ngGuideStepLocation: WalkLocation = 'bottom';\n  @Input('ngGuideStepStyle') ngGuideStepStyle: { [key: string]: string } | null = null;\n  @Input('ngGuideStepDisplayArrow') ngGuideStepDisplayArrow: boolean = true;\n  @Input('ngGuideStepOverlay') ngGuideStepOverlay: boolean | string = true;\n  @Input('ngGuideStepFocusElement') ngGuideStepFocusElement: boolean = true;\n\n  @Output('ngGuideStepStepStatus') ngGuideStepStepStatus: EventEmitter<StepStatus> = new EventEmitter();\n\n  private componentRef: ComponentRef<GuideContentComponent>;\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private elementRef: ElementRef,\n    private viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2,\n    private injector: Injector,\n    private resolver: ComponentFactoryResolver,\n    private walkLibService: NgGuideWalkLibService) { }\n\n  ngOnInit(): void {\n    this.subscribeToGuideRequest();\n    this.walkLibService.register(this.step as number);\n  }\n  ngOnDestroy(): void {\n    this.closeComponent();\n    this.walkLibService.unregister(this.step as number);\n  }\n  private closeComponent() {\n    if (!this.componentRef) { return; }\n    this.ngGuideStepStepStatus.emit('BeforeClose');\n    this.componentRef.destroy();\n    this.componentRef = null;\n    this.ngGuideStepStepStatus.emit('AfterClose');\n\n  }\n  private generateComponent() {\n    this.ngGuideStepStepStatus.emit('BeforeOpen');\n    const factory = this.resolver.resolveComponentFactory(GuideContentComponent);\n    const content = this.generateNgContent();\n    this.componentRef = this.viewContainerRef.createComponent(factory, 0, null, content);\n    this.setInputs();\n    this.handleFocus();\n    this.handleOverlay();\n    this.ngGuideStepStepStatus.emit('Open');\n  }\n\n  private createComponent() {\n    this.generateComponent();\n  }\n\n  generateNgContent() {\n    // Content is string\n    if (typeof this.ngGuideStepContent === 'string') {\n      const element = this.renderer.createText(this.ngGuideStepContent);\n      return [[element]];\n    }\n    // Content is Template\n    if (this.ngGuideStepContent instanceof TemplateRef) {\n      const viewRefTemplate = this.ngGuideStepContent.createEmbeddedView({});\n      return [viewRefTemplate.rootNodes];\n    }\n\n    // Else it's a component\n    const factory = this.resolver.resolveComponentFactory(this.ngGuideStepContent);\n    const viewRef = factory.create(this.injector);\n    return [[viewRef.location.nativeElement]];\n  }\n  private setInputs() {\n    const instanceRef = this.componentRef.instance;\n    instanceRef.step = this.step as number;\n    instanceRef.target = this.elementRef.nativeElement;\n    instanceRef.location = this.ngGuideStepLocation || 'bottom';\n    instanceRef.displayArrow = this.ngGuideStepDisplayArrow;\n    if (this.ngGuideStepStyle) {\n      instanceRef.customCss = this.ngGuideStepStyle;\n    }\n  }\n  private subscribeToGuideRequest() {\n    this.walkLibService.getStepObservable(<number>this.step)\n      .pipe(takeUntil(unsignedOnDestroyed(this)))\n      .subscribe((walkEvent: WalkEvent) => walkEvent.event === 'open' ? this.createComponent() : this.closeComponent());\n  }\n  private getOffset(element) {\n    const body = document.body;\n    const docEl = document.documentElement;\n    const scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n    const scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n    const x = element.getBoundingClientRect();\n    return {\n      top: x.top + scrollTop,\n      width: x.width,\n      height: x.height,\n      left: x.left + scrollLeft\n    };\n  }\n  private handleOverlay() {\n    if (toBoolean(this.ngGuideStepOverlay)) {\n      this.overlay = this.renderer.createElement('div');\n      // this.overlay.className = 'overlay';\n      this.renderer.addClass(this.overlay, 'overlay');\n      this.renderer.appendChild(this.getRootElement(), this.overlay);\n      const targetElm = this.elementRef.nativeElement;\n      // if (!targetElm.tagName || targetElm.tagName.toLowerCase() === 'body') {\n      //   const styleText = 'top: 0;bottom: 0; left: 0;right: 0;position: fixed;';\n      //   this.overlay.style.cssText = styleText;\n      // } else {\n      //   // set overlay layer position\n      //   const elementPosition = this.getOffset(targetElm);\n      //   if (elementPosition) {\n      //     const styleText = 'width: ' + elementPosition.width + 'px; height:' \n      //     + elementPosition.height + 'px; top:' + elementPosition.top + 'px;left: ' + elementPosition.left + 'px;';\n      //     this.overlay.style.cssText = styleText;\n      //    }\n      // }\n      this.renderer.addClass(this.elementRef.nativeElement, 'helperLayer');\n      this.componentRef.onDestroy(() => {\n        this.renderer.removeChild(this.getRootElement(), this.overlay);\n          this.renderer.removeClass(this.elementRef.nativeElement, 'helperLayer');\n       });\n\n      // this.renderer.addClass(this.elementRef.nativeElement, 'overlay');\n      // this.componentRef.onDestroy(() => {\n      //  this.renderer.removeClass(this.elementRef.nativeElement, 'overlay');\n      // });\n    }\n  }\n  private handleFocus() {\n    if (toBoolean(this.ngGuideStepFocusElement)) {\n      this.elementRef.nativeElement.focus();\n    }\n  }\n  private getRootElement() {\n    return this.document ? this.document.body : this.getRootOfAllElement();\n  }\n  private getRootOfAllElement() {\n    let last = this.renderer.parentNode(this.elementRef.nativeElement);\n    let res = null;\n    while (last && last.localName !== this.rootElement){\n      res = last;\n      last = this.renderer.parentNode(res);\n    }\n    return res;\n  }\n\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n// import { CommonModule } from '@angular/common';\nimport { NgGuideWalkLibComponent } from './ng-guide-walk-lib.component';\nimport { NgGuideStepDirective } from './ng-guide-step.directive';\nimport { GuideContentComponent } from './guide-content/guide-content.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgGuideWalkLibService } from './ng-guide-walk-lib.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    // BrowserModule,\n  ],\n  entryComponents: [GuideContentComponent],\n  declarations: [NgGuideWalkLibComponent,\n    NgGuideStepDirective,\n    GuideContentComponent],\n  exports: [\n    NgGuideWalkLibComponent,\n    NgGuideStepDirective,\n    GuideContentComponent]\n})\nexport class NgGuideWalkLibModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n\n      ngModule: NgGuideWalkLibModule,\n\n      providers: [\n\n        {\n          provide: NgGuideWalkLibService,\n          useClass: NgGuideWalkLibService\n        }\n\n      ]\n    };\n  }\n}\n"]}