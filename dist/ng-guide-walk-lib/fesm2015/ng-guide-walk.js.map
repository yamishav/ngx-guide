{"version":3,"file":"ng-guide-walk.js.map","sources":["ng://ng-guide-walk/lib/ng-guide-walk-lib.service.ts","ng://ng-guide-walk/lib/ng-guide-walk-lib.component.ts","ng://ng-guide-walk/lib/utils/index.ts","ng://ng-guide-walk/lib/guide-content/guide-content.component.ts","ng://ng-guide-walk/lib/ng-guide-step.directive.ts","ng://ng-guide-walk/lib/ng-guide-walk-lib.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { WalkEvent } from './ng-guide.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgGuideWalkLibService {\n  private activeSteps = [];\n  private eventWalkSubject: Subject<WalkEvent> = new Subject();\n  private currentStep: number | null = null;\n  private _config = {};\n\n  get config() {\n    return this._config;\n  }\n  set config(config) {\n    this._config = config;\n  }\n\n  constructor() { }\n  register(step: number) {\n    this.activeSteps.push(step);\n  }\n  unregister(step: number) {\n    this.activeSteps =  this.activeSteps.filter(stepNumber => stepNumber !== step);\n  }\n  isLast(step) {\n\n    return this.currentStep ? (this.activeSteps.length) === step : true;\n  }\n  stopGuide() {\n    this.closeCurrentStep();\n    this.currentStep = undefined;\n  }\n  public startGuide() {\n    this.activeSteps.sort();\n    if (this.currentStep) { return; }\n    this.currentStep = 1;\n    this.invokeStep(this.currentStep);\n  }\n  public invokeStep(stepNum: number) {\n    this.closeCurrentStep();\n    this.currentStep = this.activeSteps[stepNum - 1];\n    this.eventWalkSubject.next({ step: stepNum, event: 'open' });\n  }\n  private closeCurrentStep() {\n    if (this.currentStep) {\n      this.eventWalkSubject.next({ step: this.currentStep, event: 'close' });\n    }\n  }\n\n  public nextGuide() {\n    this.closeCurrentStep();\n    if (this.isLast(this.currentStep)) {\n      this.currentStep = undefined;\n      return; // and we are done for this tour\n    }\n    this.currentStep++;\n    this.invokeStep(this.currentStep);\n    \n    \n  }\n  public getStepObservable(stepNum: number): Observable<WalkEvent> {\n    return this.eventWalkSubject\n      .asObservable()\n      .pipe(filter(item => item.step === stepNum));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-guide-walk',\n  template: `\n    <p>\n      ng-guide-walk-lib works!\n    </p>\n    <ng-content></ng-content>\n  `,\n  styles: []\n})\nexport class NgGuideWalkLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * \n * @param num - the number to parse\n * Try's to parse any to number\n */\nexport function toNumber(num: number | any): number {\n    return Number.isInteger(num) ? num : Number.parseInt(num);\n}\n\nexport function unsignedOnDestroyed(component: OnDestroy) {\n  const oldNgOnDestroy = component.ngOnDestroy;\n  const onDestroySubject$ = new ReplaySubject<void>(1);\n  component.ngOnDestroy = () => {\n    oldNgOnDestroy.apply(component);\n    onDestroySubject$.next(undefined);\n    onDestroySubject$.complete();\n  };\n  return onDestroySubject$;\n}\n\nexport function toBoolean(value: boolean | string) {\n  return String(value) == 'true';\n}\n","import { Component, OnInit, Input, OnDestroy, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\nimport * as GuideUtils from '../utils';\nimport { NgGuideWalkLibService } from '../ng-guide-walk-lib.service';\nimport { TouchSequence } from 'selenium-webdriver';\nimport 'popper.js';\nimport Popper from 'popper.js';\nexport type WalkLocation = Popper.Placement;\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'ng-guide-content',\n  templateUrl: './guide-content.component.html',\n  styleUrls: ['./guide-content.component.scss']\n})\nexport class GuideContentComponent implements OnInit, OnDestroy {\n  private currentAction: 'next' | 'stop' = 'next';\n  private _step = 1;\n  private popper: Popper;\n  show = true;\n  overlayObject = null;\n  @Input() shouldCreateOverlay = false;\n  @Input() modifiers: Popper.Modifiers;\n  @Input() positionFixed = false;\n  @Input() eventsEnabled = true;\n  @Input() target: string | Element;\n  @Input() location: WalkLocation = 'right';\n  @Input() displayArrow: boolean = true;\n  @Input() customCss: { [key: string]: string } = null;\n  @Input() set step(step: number) {\n    this._step = GuideUtils.toNumber(step);\n  }\n  get step() {\n    return this._step;\n  }\n\n\n  constructor(\n    private _element: ElementRef<HTMLElement>,\n    private _renderer: Renderer2,\n    private host: ElementRef<HTMLElement>,\n    private guideService: NgGuideWalkLibService) {\n\n  }\n\n  ngOnInit() {\n    // todo : move to an action trigger when needed\n\n    const { location, positionFixed, eventsEnabled, modifiers } = this;\n  \n    this.popper = new Popper(\n      this.getNode(),\n      this._element.nativeElement.querySelector('.ngx-guide'),\n      <any>{\n        placement: location,\n        positionFixed,\n        eventsEnabled,\n        modifiers\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.popper.destroy();\n    this.clean();\n  }\n  next() {\n    this.guideService.nextGuide();\n\n\n  }\n  isLast() {\n    return this.guideService.isLast(this.step);\n  }\n  done() {\n    this.guideService.stopGuide();\n  }\n  private getNode(): Element {\n    if (this.target) {\n      if (typeof this.target === 'string') {\n        return document.querySelector(this.target);\n      } else {\n        return this.target;\n      }\n    } else {\n      return this._element.nativeElement;\n    }\n  }\n  private clean() {\n    if (!this.overlayObject) { return; }\n    this.overlayObject.style.display = 'none';\n  }\n}\n","import {\n  Directive,\n  ViewContainerRef,\n  ElementRef,\n  Input,\n  TemplateRef,\n  Type,\n  EventEmitter,\n  ComponentRef,\n  ComponentFactoryResolver, Renderer2, Injector, OnDestroy, OnInit, Output\n} from '@angular/core';\nimport { NgGuideWalkLibService } from './ng-guide-walk-lib.service';\nimport { toNumber, unsignedOnDestroyed, toBoolean } from './utils';\nimport { WalkEvent } from './ng-guide.types';\nimport { takeUntil } from 'rxjs/operators';\nimport { GuideContentComponent, WalkLocation } from './guide-content/guide-content.component';\n\nexport type StepStatus = 'BeforeOpen' | 'Open' | 'BeforeClose' | 'AfterClose';\n\n@Directive({\n  selector: '[ngGuideStep]',\n})\nexport class NgGuideStepDirective implements OnInit, OnDestroy {\n\n  position = 'below';\n  private _step: number = 1;\n\n  @Input('ngGuideStep') set step(stepNumber: number | string) {\n    this._step = toNumber(stepNumber);\n  }\n  get step(): number | string {\n    return this._step;\n  }\n  @Input('ngGuideStepContent') ngGuideStepContent: string | TemplateRef<any> | Type<any>;\n  @Input('ngGuideStepLocation') ngGuideStepLocation: WalkLocation = 'bottom';\n  @Input('ngGuideStepStyle') ngGuideStepStyle: { [key: string]: string } | null = null;\n  @Input('ngGuideStepDisplayArrow') ngGuideStepDisplayArrow: boolean = true;\n  @Input('ngGuideStepOverlay') ngGuideStepOverlay: boolean | string = true;\n  @Input('ngGuideStepFocusElement') ngGuideStepFocusElement: boolean = true;\n\n  @Output('ngGuideStepStepStatus') ngGuideStepStepStatus: EventEmitter<StepStatus> = new EventEmitter();\n\n  private componentRef: ComponentRef<GuideContentComponent>;\n  constructor(\n    private elementRef: ElementRef,\n    private viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2,\n    private injector: Injector,\n    private resolver: ComponentFactoryResolver,\n    private walkLibService: NgGuideWalkLibService) { }\n\n  ngOnInit(): void {\n    this.subscribeToGuideRequest();\n    this.walkLibService.register(this.step as number);\n  }\n  ngOnDestroy(): void {\n    this.closeComponent();\n    this.walkLibService.unregister(this.step as number);\n  }\n  private closeComponent() {\n    if (!this.componentRef) { return; }\n    this.ngGuideStepStepStatus.emit('BeforeClose');\n    this.componentRef.destroy();\n    this.componentRef = null;\n    this.ngGuideStepStepStatus.emit('AfterClose');\n\n  }\n  private generateComponent() {\n    this.ngGuideStepStepStatus.emit('BeforeOpen');\n    const factory = this.resolver.resolveComponentFactory(GuideContentComponent);\n    const content = this.generateNgContent();\n    this.componentRef = this.viewContainerRef.createComponent(factory, 0, null, content);\n    this.setInputs();\n    this.handleFocus();\n    this.handleOverlay();\n    this.ngGuideStepStepStatus.emit('Open');\n  }\n\n  private createComponent() {\n    this.generateComponent();\n  }\n\n  generateNgContent() {\n    // Content is string\n    if (typeof this.ngGuideStepContent === 'string') {\n      const element = this.renderer.createText(this.ngGuideStepContent);\n      return [[element]];\n    }\n    // Content is Template\n    if (this.ngGuideStepContent instanceof TemplateRef) {\n      const viewRefTemplate = this.ngGuideStepContent.createEmbeddedView({});\n      return [viewRefTemplate.rootNodes];\n    }\n\n    // Else it's a component\n    const factory = this.resolver.resolveComponentFactory(this.ngGuideStepContent);\n    const viewRef = factory.create(this.injector);\n    return [[viewRef.location.nativeElement]];\n  }\n  private setInputs() {\n    const instanceRef = this.componentRef.instance;\n    instanceRef.step = this.step as number;\n    instanceRef.target = this.elementRef.nativeElement;\n    instanceRef.location = this.ngGuideStepLocation || 'bottom';\n    instanceRef.displayArrow = this.ngGuideStepDisplayArrow;\n    if (this.ngGuideStepStyle) {\n      instanceRef.customCss = this.ngGuideStepStyle;\n    }\n  }\n  private subscribeToGuideRequest() {\n    this.walkLibService.getStepObservable(<number>this.step)\n      .pipe(takeUntil(unsignedOnDestroyed(this)))\n      .subscribe((walkEvent: WalkEvent) => walkEvent.event === 'open' ? this.createComponent() : this.closeComponent());\n  }\n\n  private handleOverlay() {\n    if (toBoolean(this.ngGuideStepOverlay)) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'overlay');\n      this.componentRef.onDestroy(() => {\n        this.renderer.removeClass(this.elementRef.nativeElement, 'overlay');\n      });\n    }\n  }\n  private handleFocus() {\n    if (toBoolean(this.ngGuideStepFocusElement)) {\n      this.elementRef.nativeElement.focus();\n    }\n  }\n\n\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n// import { CommonModule } from '@angular/common';\nimport { NgGuideWalkLibComponent } from './ng-guide-walk-lib.component';\nimport { NgGuideStepDirective } from './ng-guide-step.directive';\nimport { GuideContentComponent } from './guide-content/guide-content.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgGuideWalkLibService } from './ng-guide-walk-lib.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    // BrowserModule,\n  ],\n  entryComponents: [GuideContentComponent],\n  declarations: [NgGuideWalkLibComponent,\n    NgGuideStepDirective,\n    GuideContentComponent],\n  exports: [\n    NgGuideWalkLibComponent,\n    NgGuideStepDirective,\n    GuideContentComponent]\n})\nexport class NgGuideWalkLibModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n\n      ngModule: NgGuideWalkLibModule,\n\n      providers: [\n\n        {\n          provide: NgGuideWalkLibService,\n          useClass: NgGuideWalkLibService\n        }\n\n      ]\n    };\n  }\n}\n"],"names":["GuideUtils.toNumber"],"mappings":";;;;;;;;;;AAAA,MAQa,qBAAqB;IAahC;QAZQ,gBAAW,GAAG,EAAE,CAAC;QACjB,qBAAgB,GAAuB,IAAI,OAAO,EAAE,CAAC;QACrD,gBAAW,GAAkB,IAAI,CAAC;QAClC,YAAO,GAAG,EAAE,CAAC;KASJ;;;;IAPjB,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;IACD,IAAI,MAAM,CAAC,MAAM;QACf,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;KACvB;;;;;IAGD,QAAQ,CAAC,IAAY;QACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7B;;;;;IACD,UAAU,CAAC,IAAY;QACrB,IAAI,CAAC,WAAW,GAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,IAAI,UAAU,KAAK,IAAI,CAAC,CAAC;KAChF;;;;;IACD,MAAM,CAAC,IAAI;QAET,OAAO,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,MAAM,IAAI,GAAG,IAAI,CAAC;KACrE;;;;IACD,SAAS;QACP,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;KAC9B;;;;IACM,UAAU;QACf,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,WAAW,EAAE;YAAE,OAAO;SAAE;QACjC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACnC;;;;;IACM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;KAC9D;;;;IACO,gBAAgB;QACtB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;SACxE;KACF;;;;IAEM,SAAS;QACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YACjC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,OAAO;SACR;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAGnC;;;;;IACM,iBAAiB,CAAC,OAAe;QACtC,OAAO,IAAI,CAAC,gBAAgB;aACzB,YAAY,EAAE;aACd,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;KAChD;;;YA/DF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;ACPD,MAYa,uBAAuB;IAElC,iBAAiB;;;;IAEjB,QAAQ;KACP;;;YAfF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE;;;;;GAKT;aAEF;;;;;;;;;ACVD;;;;;;AAOA,SAAgB,QAAQ,CAAC,GAAiB;IACtC,OAAO,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;CAC7D;;;;;AAED,SAAgB,mBAAmB,CAAC,SAAoB;;UAChD,cAAc,GAAG,SAAS,CAAC,WAAW;;UACtC,iBAAiB,GAAG,IAAI,aAAa,CAAO,CAAC,CAAC;IACpD,SAAS,CAAC,WAAW,GAAG;QACtB,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAChC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;KAC9B,CAAC;IACF,OAAO,iBAAiB,CAAC;CAC1B;;;;;AAED,SAAgB,SAAS,CAAC,KAAuB;IAC/C,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC;CAChC;;;;;;ACzBD,MAca,qBAAqB;;;;;;;IAsBhC,YACU,QAAiC,EACjC,SAAoB,EACpB,IAA6B,EAC7B,YAAmC;QAHnC,aAAQ,GAAR,QAAQ,CAAyB;QACjC,cAAS,GAAT,SAAS,CAAW;QACpB,SAAI,GAAJ,IAAI,CAAyB;QAC7B,iBAAY,GAAZ,YAAY,CAAuB;QAzBrC,kBAAa,GAAoB,MAAM,CAAC;QACxC,UAAK,GAAG,CAAC,CAAC;QAElB,SAAI,GAAG,IAAI,CAAC;QACZ,kBAAa,GAAG,IAAI,CAAC;QACZ,wBAAmB,GAAG,KAAK,CAAC;QAE5B,kBAAa,GAAG,KAAK,CAAC;QACtB,kBAAa,GAAG,IAAI,CAAC;QAErB,aAAQ,GAAiB,OAAO,CAAC;QACjC,iBAAY,GAAY,IAAI,CAAC;QAC7B,cAAS,GAA8B,IAAI,CAAC;KAepD;;;;;IAdD,IAAa,IAAI,CAAC,IAAY;QAC5B,IAAI,CAAC,KAAK,GAAGA,QAAmB,CAAC,IAAI,CAAC,CAAC;KACxC;;;;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;IAWD,QAAQ;;;cAGA,EAAE,QAAQ,EAAE,aAAa,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,IAAI;QAElE,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CACtB,IAAI,CAAC,OAAO,EAAE,EACd,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,qBAClD;YACH,SAAS,EAAE,QAAQ;YACnB,aAAa;YACb,aAAa;YACb,SAAS;SACV,GACF,CAAC;KACH;;;;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;;;;IACD,IAAI;QACF,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;KAG/B;;;;IACD,MAAM;QACJ,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5C;;;;IACD,IAAI;QACF,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;KAC/B;;;;IACO,OAAO;QACb,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;gBACnC,OAAO,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC5C;iBAAM;gBACL,OAAO,IAAI,CAAC,MAAM,CAAC;aACpB;SACF;aAAM;YACL,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;SACpC;KACF;;;;IACO,KAAK;QACX,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAAE,OAAO;SAAE;QACpC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;KAC3C;;;YAlFF,SAAS,SAAC;gBACT,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,QAAQ,EAAE,kBAAkB;gBAC5B,mbAA6C;;aAE9C;;;;YAb6C,UAAU;YAAE,SAAS;YAArB,UAAU;YAE/C,qBAAqB;;;kCAkB3B,KAAK;wBACL,KAAK;4BACL,KAAK;4BACL,KAAK;qBACL,KAAK;uBACL,KAAK;2BACL,KAAK;wBACL,KAAK;mBACL,KAAK;;;;;;;AC5BR,MAsBa,oBAAoB;;;;;;;;;IAqB/B,YACU,UAAsB,EACtB,gBAAkC,EAClC,QAAmB,EACnB,QAAkB,EAClB,QAAkC,EAClC,cAAqC;QALrC,eAAU,GAAV,UAAU,CAAY;QACtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,aAAQ,GAAR,QAAQ,CAAW;QACnB,aAAQ,GAAR,QAAQ,CAAU;QAClB,aAAQ,GAAR,QAAQ,CAA0B;QAClC,mBAAc,GAAd,cAAc,CAAuB;QAzB/C,aAAQ,GAAG,OAAO,CAAC;QACX,UAAK,GAAW,CAAC,CAAC;QASI,wBAAmB,GAAiB,QAAQ,CAAC;QAChD,qBAAgB,GAAqC,IAAI,CAAC;QACnD,4BAAuB,GAAY,IAAI,CAAC;QAC7C,uBAAkB,GAAqB,IAAI,CAAC;QACvC,4BAAuB,GAAY,IAAI,CAAC;QAEzC,0BAAqB,GAA6B,IAAI,YAAY,EAAE,CAAC;KASlD;;;;;IAtBpD,IAA0B,IAAI,CAAC,UAA2B;QACxD,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;KACnC;;;;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;IAmBD,QAAQ;QACN,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,QAAQ,oBAAC,IAAI,CAAC,IAAI,GAAW,CAAC;KACnD;;;;IACD,WAAW;QACT,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,UAAU,oBAAC,IAAI,CAAC,IAAI,GAAW,CAAC;KACrD;;;;IACO,cAAc;QACpB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YAAE,OAAO;SAAE;QACnC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAE/C;;;;IACO,iBAAiB;QACvB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;cACxC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,qBAAqB,CAAC;;cACtE,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE;QACxC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACrF,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACzC;;;;IAEO,eAAe;QACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;;;;IAED,iBAAiB;;QAEf,IAAI,OAAO,IAAI,CAAC,kBAAkB,KAAK,QAAQ,EAAE;;kBACzC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC;YACjE,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACpB;;QAED,IAAI,IAAI,CAAC,kBAAkB,YAAY,WAAW,EAAE;;kBAC5C,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,EAAE,CAAC;YACtE,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;SACpC;;;cAGK,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,kBAAkB,CAAC;;cACxE,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC7C,OAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;KAC3C;;;;IACO,SAAS;;cACT,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ;QAC9C,WAAW,CAAC,IAAI,sBAAG,IAAI,CAAC,IAAI,EAAU,CAAC;QACvC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QACnD,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,IAAI,QAAQ,CAAC;QAC5D,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC;QACxD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;SAC/C;KACF;;;;IACO,uBAAuB;QAC7B,IAAI,CAAC,cAAc,CAAC,iBAAiB,oBAAS,IAAI,CAAC,IAAI,GAAC;aACrD,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;aAC1C,SAAS,CAAC,CAAC,SAAoB,KAAK,SAAS,CAAC,KAAK,KAAK,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;KACrH;;;;IAEO,aAAa;QACnB,IAAI,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE;YACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;YACjE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;aACrE,CAAC,CAAC;SACJ;KACF;;;;IACO,WAAW;QACjB,IAAI,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE;YAC3C,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACvC;KACF;;;YA5GF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;aAC1B;;;;YAlBC,UAAU;YADV,gBAAgB;YAOU,SAAS;YAAE,QAAQ;YAA7C,wBAAwB;YAEjB,qBAAqB;;;mBAgB3B,KAAK,SAAC,aAAa;iCAMnB,KAAK,SAAC,oBAAoB;kCAC1B,KAAK,SAAC,qBAAqB;+BAC3B,KAAK,SAAC,kBAAkB;sCACxB,KAAK,SAAC,yBAAyB;iCAC/B,KAAK,SAAC,oBAAoB;sCAC1B,KAAK,SAAC,yBAAyB;oCAE/B,MAAM,SAAC,uBAAuB;;;;;;;ACxCjC,MAuBa,oBAAoB;;;;IAC/B,OAAO,OAAO;QACZ,OAAO;YAEL,QAAQ,EAAE,oBAAoB;YAE9B,SAAS,EAAE;gBAET;oBACE,OAAO,EAAE,qBAAqB;oBAC9B,QAAQ,EAAE,qBAAqB;iBAChC;aAEF;SACF,CAAC;KACH;;;YA7BF,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;iBAEb;gBACD,eAAe,EAAE,CAAC,qBAAqB,CAAC;gBACxC,YAAY,EAAE,CAAC,uBAAuB;oBACpC,oBAAoB;oBACpB,qBAAqB,CAAC;gBACxB,OAAO,EAAE;oBACP,uBAAuB;oBACvB,oBAAoB;oBACpB,qBAAqB;iBAAC;aACzB;;;;;;;;;;;;;;;"}
